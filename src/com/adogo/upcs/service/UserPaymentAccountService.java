package com.adogo.upcs.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.adogo.uaas.entity.UserAccount;
import com.adogo.upcs.dao.UserPaymentAccountDao;
import com.adogo.upcs.entity.UserPaymentAccount;
import com.braintreegateway.BraintreeGateway;
import com.braintreegateway.ClientTokenRequest;
import com.braintreegateway.Customer;
import com.braintreegateway.CustomerRequest;
import com.braintreegateway.Environment;
import com.braintreegateway.Result;

@Service
public class UserPaymentAccountService {

	private UserPaymentAccountDao userPaymentAccountDao;
	
	@Autowired
	@Qualifier("userPaymentAccountDaoParamImpl")
	public void setUserPaymentAccountDao(UserPaymentAccountDao userPaymentAccountDao) {
		this.userPaymentAccountDao = userPaymentAccountDao;
	}
	
	private static BraintreeGateway gateway = new BraintreeGateway(
			  Environment.SANDBOX,
			  "k3f73sfh3vf5vhdp",
			  "4h2yn56tdqzrc6nc",
			  "41b370e255158588ed75f406e4b74195"
			);
	
	//save with a readable name for business method
	private void createCustomerPaymentAccount(UserPaymentAccount userPaymentAccount) {
		long id  = userPaymentAccountDao.create(userPaymentAccount);
		System.out.println("Customer created, uid = "+id);
	}
	
	public UserPaymentAccount findByUserAcctName(String userAccountName){
		UserPaymentAccount userPaymentAccount = null;
		
		try{
			userPaymentAccount = userPaymentAccountDao.findByUserAccountName(userAccountName);
    	}catch(Exception ex){
    		//ex.printStackTrace();
    	}finally{
    	    System.out.println("userPaymentAccount="+userPaymentAccount);
    	}
		return userPaymentAccount;
	}
	
	public String registerUserPaymentAccount(UserPaymentAccount userPaymentAccount){
		String strMsg ="";
		
		CustomerRequest customerRequest = new CustomerRequest()
        	.firstName(userPaymentAccount.getFirstName())
        	.lastName(userPaymentAccount.getLastName());

		Result<Customer> result = gateway.customer().create(customerRequest);
    
	    if (result.isSuccess()) {
	    	strMsg =  "Customer created with Name: " + result.getTarget().getFirstName() + " " + result.getTarget().getLastName() + ", ID: " + result.getTarget().getId();
	    	
	    	String customerId = result.getTarget().getId(); //generated by braintree
	    	userPaymentAccount.setCustomerId(customerId);
	    	
	    	//save to db
	    	this.createCustomerPaymentAccount(userPaymentAccount);
	    	
	      } else {
	    	  strMsg =  "Error: " + result.getMessage();
	      }
		
		return strMsg;
	}
}
